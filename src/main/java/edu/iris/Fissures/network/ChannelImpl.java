// **********************************************************************
//
// Generated by the ORBacus IDL to Java Translator
//
// Copyright (c) 2000
// Object Oriented Concepts, Inc.
// Billerica, MA, USA
//
// All Rights Reserved
//
// **********************************************************************

// Version: 4.0.3

package edu.iris.Fissures.network;

import edu.iris.Fissures.Orientation;
import edu.iris.Fissures.Sampling;
import edu.iris.Fissures.TimeRange;
import edu.iris.Fissures.IfNetwork.Channel;
import edu.iris.Fissures.IfNetwork.ChannelId;
import edu.iris.Fissures.IfNetwork.Site;

//
// IDL:iris.edu/Fissures/IfNetwork/Channel:1.0
//
/***/

public class ChannelImpl extends Channel
{

    public ChannelImpl(ChannelId id,
                       String name,
                       Orientation an_orientation,
                       Sampling sampling_info,
                       TimeRange effective_time,
                       Site my_site) {
        this.id = id;
        this.setName(name);
        this.setOrientation(an_orientation);
        this.setSamplingInfo(sampling_info);
        this.setEffectiveTime(effective_time);
        this.setSite(my_site);
    }

    public ChannelImpl(ChannelId id,
                       String name,
                       Orientation an_orientation,
                       Sampling sampling_info,
                       TimeRange effective_time,
                       Site my_site,
                       int dbid) {
        this.id = id;
        this.setName(name);
        this.setOrientation(an_orientation);
        this.setSamplingInfo(sampling_info);
        this.setEffectiveTime(effective_time);
        this.setSite(my_site);
        this.dbid = dbid;
    }

    /** for hibernate */
    protected ChannelImpl() {
    }

    /** Only for use for CORBA object serialization. */
    public static ChannelImpl createEmpty() {
    return new ChannelImpl();
    }

    //
    // IDL:iris.edu/Fissures/IfNetwork/Channel/get_id:1.0
    //
    public ChannelId
    get_id()
    {
        return getId();
    }

    //
    // IDL:iris.edu/Fissures/IfNetwork/Channel/get_code:1.0
    //
    public String
    get_code()
    {
        return getId().channel_code;
    }
    
    /** Same as getNetworkAttr(), but returns a NetworkAttrImpl to avoid casting. */
    public NetworkAttrImpl getNetworkAttrImpl() {
        return (NetworkAttrImpl)getNetworkAttr();
    }
    
    /** Same as getStation(), but returns a StationImpl to avoid casting. */
    public StationImpl getStationImpl() {
        return (StationImpl)getStation();
    }

    /** Same as getSite(), but returns a SiteImpl to avoid casting. */
    public SiteImpl getSiteImpl() {return (SiteImpl)getSite(); }

    /**
     * Calculates a default azimuth based on the orientation code,
     * 0 for Z and N, 90 for E, -1 otherwise
     * @param orientationCode
     * @return
     */
    public static int getAzimuth(String chanCode) {
        if (chanCode.endsWith("Z") || chanCode.endsWith("N")) {
            return 0;
        } else if (chanCode.endsWith("E")) {
            return 90;
        }
        return -1;
    }
    /**
     * Calculates a default dip based on the orientation code,
     * -90 for Z, 0 for N and E, -1 otherwise
     * @param orientationCode
     * @return
     */
    public static int getDip(String chanCode) {
        if (chanCode.endsWith("E") || chanCode.endsWith("N")) {
            return 0;
        } else if (chanCode.endsWith("Z")) {
            return -90;
        }
        return -1;
    }
    
    protected int dbid;
    protected void setDbid(int dbid) {
        this.dbid = dbid;
    }
    public int getDbid() {
        return dbid;
    }

    public void associateInDB(ChannelImpl indb) {
        setDbid(indb.getDbid());
    }
    
    public static ChannelImpl[] implize(Channel[] chan) {
        if (chan instanceof ChannelImpl[]) {
            return (ChannelImpl[])chan;
        }
        ChannelImpl[] out = new ChannelImpl[chan.length];
        for(int i = 0; i < out.length; i++) {
            out[i] = (ChannelImpl)chan[i];
        }
        return out;
    }
    
    public String toString() {
        return ChannelIdUtil.toStringNoDates(this);
    }
}
